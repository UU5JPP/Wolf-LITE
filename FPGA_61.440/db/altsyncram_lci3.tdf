--altsyncram ADDRESS_ACLR_A="NONE" ADDRESS_ACLR_B="NONE" ADDRESS_REG_B="CLOCK1" BYTE_SIZE=8 BYTEENA_ACLR_A="NONE" BYTEENA_ACLR_B="NONE" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" CLOCK_ENABLE_CORE_A="BYPASS" CLOCK_ENABLE_CORE_B="BYPASS" CLOCK_ENABLE_INPUT_A="BYPASS" CLOCK_ENABLE_INPUT_B="BYPASS" CLOCK_ENABLE_OUTPUT_A="BYPASS" CLOCK_ENABLE_OUTPUT_B="NORMAL" CYCLONEII_M4K_COMPATIBILITY="ON" DEVICE_FAMILY="Cyclone IV E" ENABLE_ECC="FALSE" ENABLE_RUNTIME_MOD="NO" IMPLEMENT_IN_LES="ON" INDATA_ACLR_A="NONE" INDATA_ACLR_B="NONE" INIT_FILE_LAYOUT="PORT_B" LOW_POWER_MODE="AUTO" MAXIMUM_DEPTH=4 NUMWORDS_A=4 NUMWORDS_B=4 OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_A="NONE" OUTDATA_ACLR_B="NONE" OUTDATA_REG_A="UNREGISTERED" OUTDATA_REG_B="CLOCK1" RAM_BLOCK_TYPE="AUTO" RDCONTROL_ACLR_B="NONE" RDCONTROL_REG_B="CLOCK1" READ_DURING_WRITE_MODE_MIXED_PORTS="DONT_CARE" read_during_write_mode_port_a="NEW_DATA_WITH_NBE_READ" read_during_write_mode_port_b="NEW_DATA_WITH_NBE_READ" WIDTH_A=85 WIDTH_B=85 WIDTH_BYTEENA_A=1 WIDTH_BYTEENA_B=1 WIDTHAD_A=2 WIDTHAD_B=2 WRCONTROL_ACLR_A="NONE" WRCONTROL_ACLR_B="NONE" WRCONTROL_WRADDRESS_REG_B="CLOCK1" address_a address_b clock0 clock1 clocken1 data_a q_b wren_a CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 18.1 cbx_altera_syncram_nd_impl 2018:09:12:13:04:24:SJ cbx_altsyncram 2018:09:12:13:04:24:SJ cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ cbx_stratixiii 2018:09:12:13:04:24:SJ cbx_stratixv 2018:09:12:13:04:24:SJ cbx_util_mgl 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION decode_msa (data[1..0], enable)
RETURNS ( eq[3..0]);
FUNCTION mux_rob (data[339..0], sel[1..0])
RETURNS ( result[84..0]);

--synthesis_resources = lut 170 reg 598 
OPTIONS ALTERA_INTERNAL_OPTION = "SUPPRESS_DA_RULE_INTERNAL=C106";

SUBDESIGN altsyncram_lci3
( 
	address_a[1..0]	:	input;
	address_b[1..0]	:	input;
	clock0	:	input;
	clock1	:	input;
	clocken1	:	input;
	data_a[84..0]	:	input;
	q_b[84..0]	:	output;
	wren_a	:	input;
) 
VARIABLE 
	address_reg[1..0] : dffe;
	data_reg[84..0] : dffe;
	outdata_reg[84..0] : dffe;
	ram_block[339..0] : dffe;
	rd_data_out_latch[84..0] : dffe;
	wren_reg : dffe;
	address_decoder : decode_msa;
	output_mux : mux_rob;
	address_b_wire[1..0]	: WIRE;

BEGIN 
	address_reg[].clk = clock0;
	address_reg[].d = address_a[];
	data_reg[].clk = clock0;
	data_reg[].d = data_a[];
	outdata_reg[].clk = clock1;
	outdata_reg[].d = rd_data_out_latch[].q;
	outdata_reg[].ena = clocken1;
	ram_block[].clk = (! clock0);
	ram_block[].d = ( data_reg[].q, data_reg[].q, data_reg[].q, data_reg[].q);
	ram_block[].ena = ( address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..3], address_decoder.eq[3..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..2], address_decoder.eq[2..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..1], address_decoder.eq[1..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0], address_decoder.eq[0..0]);
	rd_data_out_latch[].clk = clock1;
	rd_data_out_latch[].d = output_mux.result[];
	wren_reg.clk = clock0;
	wren_reg.d = wren_a;
	address_decoder.data[] = address_reg[].q;
	address_decoder.enable = wren_reg.q;
	output_mux.data[] = ram_block[].q;
	output_mux.sel[] = address_b_wire[];
	address_b_wire[] = address_b[];
	q_b[] = outdata_reg[].q;
END;
--VALID FILE
