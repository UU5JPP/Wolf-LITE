<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [WOLF-Lite\WOLF-Lite.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image WOLF-Lite\WOLF-Lite.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6150002: Last Updated: Sat Jan 30 22:50:57 2021
<BR><P>
<H3>Maximum Stack Usage =        780 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; LoadCalibration &rArr; SaveCalibration &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[150]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[53]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">ADC_IRQHandler</a><BR>
 <LI><a href="#[1b6]">arm_quick_sort_core_f32</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b6]">arm_quick_sort_core_f32</a><BR>
 <LI><a href="#[166]">EEPROM_Read_Data</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[166]">EEPROM_Read_Data</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[53]">ADC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[32]">AUDIO_DeInit_FS</a> from lto-llvm-ea22a7.o(.text.AUDIO_DeInit_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_AUDIO_fops_FS)
 <LI><a href="#[31]">AUDIO_Init_FS</a> from lto-llvm-ea22a7.o(.text.AUDIO_Init_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_AUDIO_fops_FS)
 <LI><a href="#[3b]">BusFault_Handler</a> from lto-llvm-ea22a7.o(.text.BusFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[55]">CAN1_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[56]">CAN1_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[57]">CAN1_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[54]">CAN1_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[81]">CAN2_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[82]">CAN2_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[83]">CAN2_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[80]">CAN2_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[23]">CAT_Control_FS</a> from lto-llvm-ea22a7.o(.text.CAT_Control_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
 <LI><a href="#[22]">CAT_DeInit_FS</a> from lto-llvm-ea22a7.o(.text.CAT_DeInit_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
 <LI><a href="#[21]">CAT_Init_FS</a> from lto-llvm-ea22a7.o(.text.CAT_Init_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
 <LI><a href="#[24]">CAT_Receive_FS</a> from lto-llvm-ea22a7.o(.text.CAT_Receive_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
 <LI><a href="#[8f]">DCMI_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[35]">DEBUG_Control_FS</a> from lto-llvm-ea22a7.o(.text.DEBUG_Control_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
 <LI><a href="#[34]">DEBUG_DeInit_FS</a> from lto-llvm-ea22a7.o(.text.DEBUG_DeInit_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
 <LI><a href="#[33]">DEBUG_Init_FS</a> from lto-llvm-ea22a7.o(.text.DEBUG_Init_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
 <LI><a href="#[36]">DEBUG_Receive_FS</a> from lto-llvm-ea22a7.o(.text.DEBUG_Receive_FS) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
 <LI><a href="#[4c]">DMA1_Stream0_IRQHandler</a> from lto-llvm-ea22a7.o(.text.DMA1_Stream0_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4d]">DMA1_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4e]">DMA1_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4f]">DMA1_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[50]">DMA1_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[51]">DMA1_Stream5_IRQHandler</a> from lto-llvm-ea22a7.o(.text.DMA1_Stream5_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[52]">DMA1_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[70]">DMA1_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[79]">DMA2_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7a]">DMA2_Stream1_IRQHandler</a> from lto-llvm-ea22a7.o(.text.DMA2_Stream1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7b]">DMA2_Stream2_IRQHandler</a> from lto-llvm-ea22a7.o(.text.DMA2_Stream2_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7c]">DMA2_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7d]">DMA2_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[85]">DMA2_Stream5_IRQHandler</a> from lto-llvm-ea22a7.o(.text.DMA2_Stream5_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[86]">DMA2_Stream6_IRQHandler</a> from lto-llvm-ea22a7.o(.text.DMA2_Stream6_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[87]">DMA2_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3e]">DebugMon_Handler</a> from lto-llvm-ea22a7.o(.text.DebugMon_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7e]">ETH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7f]">ETH_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[47]">EXTI0_IRQHandler</a> from lto-llvm-ea22a7.o(.text.EXTI0_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[69]">EXTI15_10_IRQHandler</a> from lto-llvm-ea22a7.o(.text.EXTI15_10_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[48]">EXTI1_IRQHandler</a> from lto-llvm-ea22a7.o(.text.EXTI1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[49]">EXTI2_IRQHandler</a> from lto-llvm-ea22a7.o(.text.EXTI2_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4a]">EXTI3_IRQHandler</a> from lto-llvm-ea22a7.o(.text.EXTI3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4b]">EXTI4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[58]">EXTI9_5_IRQHandler</a> from lto-llvm-ea22a7.o(.text.EXTI9_5_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[45]">FLASH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[71]">FMC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[91]">FPU_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[14]">FRONTPANEL_BUTTONHANDLER_AGC</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_AGC) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[15]">FRONTPANEL_BUTTONHANDLER_AGC_SPEED</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_AGC_SPEED) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[a]">FRONTPANEL_BUTTONHANDLER_ATT</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_ATT) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[b]">FRONTPANEL_BUTTONHANDLER_ATTHOLD</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_ATTHOLD) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[f]">FRONTPANEL_BUTTONHANDLER_ArB</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_ArB) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[e]">FRONTPANEL_BUTTONHANDLER_AsB</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_AsB) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[1a]">FRONTPANEL_BUTTONHANDLER_BANDMAP</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BANDMAP) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[20]">FRONTPANEL_BUTTONHANDLER_BAND_N</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BAND_N) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
 <LI><a href="#[1f]">FRONTPANEL_BUTTONHANDLER_BAND_P</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BAND_P) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
 <LI><a href="#[c]">FRONTPANEL_BUTTONHANDLER_BW</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BW) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[16]">FRONTPANEL_BUTTONHANDLER_CLAR</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_CLAR) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[13]">FRONTPANEL_BUTTONHANDLER_FAST</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_FAST) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[d]">FRONTPANEL_BUTTONHANDLER_HPF</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_HPF) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[1c]">FRONTPANEL_BUTTONHANDLER_KEYER</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_KEYER) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[18]">FRONTPANEL_BUTTONHANDLER_LOCK</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_LOCK) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[18]">FRONTPANEL_BUTTONHANDLER_LOCK</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_LOCK) referenced 2 times from lto-llvm-ea22a7.o(.text.FRONTPANEL_Process)
 <LI><a href="#[1d]">FRONTPANEL_BUTTONHANDLER_MODE_N</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_MODE_N) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
 <LI><a href="#[1e]">FRONTPANEL_BUTTONHANDLER_MODE_P</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_MODE_P) referenced 2 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
 <LI><a href="#[17]">FRONTPANEL_BUTTONHANDLER_MUTE</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_MUTE) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[12]">FRONTPANEL_BUTTONHANDLER_NOTCH</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_NOTCH) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[9]">FRONTPANEL_BUTTONHANDLER_PRE</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_PRE) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[10]">FRONTPANEL_BUTTONHANDLER_RF_POWER</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_RF_POWER) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[11]">FRONTPANEL_BUTTONHANDLER_TUNE</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_TUNE) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[19]">FRONTPANEL_BUTTONHANDLER_VOLUME</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_VOLUME) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[1b]">FRONTPANEL_BUTTONHANDLER_WPM</a> from lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_WPM) referenced 4 times from lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
 <LI><a href="#[9e]">HAL_I2SEx_FullDuplex_IRQHandler</a> from lto-llvm-ea22a7.o(.text.HAL_I2SEx_FullDuplex_IRQHandler) referenced 2 times from lto-llvm-ea22a7.o(.text.main)
 <LI><a href="#[90]">HASH_RNG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[39]">HardFault_Handler</a> from lto-llvm-ea22a7.o(.text.HardFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[61]">I2C1_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[60]">I2C1_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[63]">I2C2_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[62]">I2C2_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8a]">I2C3_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[89]">I2C3_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[98]">I2SEx_TxRxDMACplt</a> from lto-llvm-ea22a7.o(.text.I2SEx_TxRxDMACplt) referenced 2 times from lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
 <LI><a href="#[99]">I2SEx_TxRxDMAError</a> from lto-llvm-ea22a7.o(.text.I2SEx_TxRxDMAError) referenced 2 times from lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
 <LI><a href="#[97]">I2SEx_TxRxDMAHalfCplt</a> from lto-llvm-ea22a7.o(.text.I2SEx_TxRxDMAHalfCplt) referenced 2 times from lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
 <LI><a href="#[9d]">I2S_IRQHandler</a> from lto-llvm-ea22a7.o(.text.I2S_IRQHandler) referenced 2 times from lto-llvm-ea22a7.o(.text.main)
 <LI><a href="#[3a]">MemManage_Handler</a> from lto-llvm-ea22a7.o(.text.MemManage_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[38]">NMI_Handler</a> from lto-llvm-ea22a7.o(.text.NMI_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[84]">OTG_FS_IRQHandler</a> from lto-llvm-ea22a7.o(.text.OTG_FS_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6b]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8c]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8b]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8e]">OTG_HS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8d]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[42]">PVD_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3f]">PendSV_Handler</a> from lto-llvm-ea22a7.o(.text.PendSV_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[46]">RCC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6a]">RTC_Alarm_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[44]">RTC_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[37]">Reset_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[72]">SDIO_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[64]">SPI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[65]">SPI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[74]">SPI3_IRQHandler</a> from lto-llvm-ea22a7.o(.text.SPI3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3d]">SVC_Handler</a> from lto-llvm-ea22a7.o(.text.SVC_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[d4]">SYSMENU_HANDL_ADCMENU</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_ADCMENU) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[9f]">SYSMENU_HANDL_ADC_DRIVER</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_ADC_DRIVER) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_adc_handlers)
 <LI><a href="#[a0]">SYSMENU_HANDL_ADC_SHDN</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_ADC_SHDN) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_adc_handlers)
 <LI><a href="#[d1]">SYSMENU_HANDL_AUDIOMENU</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIOMENU) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[a3]">SYSMENU_HANDL_AUDIO_AGC_GAIN_TARGET</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_AGC_GAIN_TARGET) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[ac]">SYSMENU_HANDL_AUDIO_AM_LPF_pass</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_AM_LPF_pass) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b8]">SYSMENU_HANDL_AUDIO_Beeper</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_Beeper) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[aa]">SYSMENU_HANDL_AUDIO_CW_HPF_pass</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_CW_HPF_pass) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[ab]">SYSMENU_HANDL_AUDIO_CW_LPF_pass</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_CW_LPF_pass) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a6]">SYSMENU_HANDL_AUDIO_DNR_AVERAGE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_DNR_AVERAGE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a7]">SYSMENU_HANDL_AUDIO_DNR_MINMAL</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_DNR_MINMAL) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a5]">SYSMENU_HANDL_AUDIO_DNR_THRES</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_DNR_THRES) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[ae]">SYSMENU_HANDL_AUDIO_FMSquelch</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_FMSquelch) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[ad]">SYSMENU_HANDL_AUDIO_FM_LPF_pass</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_FM_LPF_pass) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a2]">SYSMENU_HANDL_AUDIO_IFGain</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_IFGain) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b1]">SYSMENU_HANDL_AUDIO_MIC_EQ_HIG</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_EQ_HIG) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[af]">SYSMENU_HANDL_AUDIO_MIC_EQ_LOW</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_EQ_LOW) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b0]">SYSMENU_HANDL_AUDIO_MIC_EQ_MID</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_EQ_MID) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a4]">SYSMENU_HANDL_AUDIO_MIC_Gain</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_Gain) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b6]">SYSMENU_HANDL_AUDIO_RX_AGC_CW_Speed</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_AGC_CW_Speed) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b5]">SYSMENU_HANDL_AUDIO_RX_AGC_SSB_Speed</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_AGC_SSB_Speed) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b4]">SYSMENU_HANDL_AUDIO_RX_EQ_HIG</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_EQ_HIG) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b2]">SYSMENU_HANDL_AUDIO_RX_EQ_LOW</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_EQ_LOW) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b3]">SYSMENU_HANDL_AUDIO_RX_EQ_MID</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_EQ_MID) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a8]">SYSMENU_HANDL_AUDIO_SSB_HPF_pass</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_SSB_HPF_pass) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a9]">SYSMENU_HANDL_AUDIO_SSB_LPF_pass</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_SSB_LPF_pass) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[b7]">SYSMENU_HANDL_AUDIO_TX_AGCSpeed</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_TX_AGCSpeed) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[a1]">SYSMENU_HANDL_AUDIO_VOLUME</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_VOLUME) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
 <LI><a href="#[d7]">SYSMENU_HANDL_Bootloader</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_Bootloader) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[d8]">SYSMENU_HANDL_CALIBRATIONMENU</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIBRATIONMENU) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[c0]">SYSMENU_HANDL_CALIB_CICCOMP_SHIFT</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_CICCOMP_SHIFT) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[bf]">SYSMENU_HANDL_CALIB_CIC_SHIFT</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_CIC_SHIFT) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c2]">SYSMENU_HANDL_CALIB_DAC_SHIFT</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_DAC_SHIFT) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[bc]">SYSMENU_HANDL_CALIB_ENCODER2_DEBOUNCE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER2_DEBOUNCE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[ba]">SYSMENU_HANDL_CALIB_ENCODER2_INVERT</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER2_INVERT) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[bb]">SYSMENU_HANDL_CALIB_ENCODER_DEBOUNCE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_DEBOUNCE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[b9]">SYSMENU_HANDL_CALIB_ENCODER_INVERT</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_INVERT) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[be]">SYSMENU_HANDL_CALIB_ENCODER_ON_FALLING</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_ON_FALLING) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[bd]">SYSMENU_HANDL_CALIB_ENCODER_SLOW_RATE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_SLOW_RATE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c5]">SYSMENU_HANDL_CALIB_RF_GAIN_HF</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_HF) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c6]">SYSMENU_HANDL_CALIB_RF_GAIN_HF_HIGH</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_HF_HIGH) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c4]">SYSMENU_HANDL_CALIB_RF_GAIN_HF_LOW</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_HF_LOW) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c3]">SYSMENU_HANDL_CALIB_RF_GAIN_LF</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_LF) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c8]">SYSMENU_HANDL_CALIB_SWR_TRANS_RATE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_SWR_TRANS_RATE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c7]">SYSMENU_HANDL_CALIB_S_METER</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_S_METER) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c1]">SYSMENU_HANDL_CALIB_TXCICCOMP_SHIFT</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_TXCICCOMP_SHIFT) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[c9]">SYSMENU_HANDL_CALIB_VOLT</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_VOLT) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
 <LI><a href="#[d2]">SYSMENU_HANDL_CWMENU</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CWMENU) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[cb]">SYSMENU_HANDL_CW_GENERATOR_SHIFT_HZ</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_GENERATOR_SHIFT_HZ) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
 <LI><a href="#[cf]">SYSMENU_HANDL_CW_GaussFilter</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_GaussFilter) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
 <LI><a href="#[ca]">SYSMENU_HANDL_CW_Key_timeout</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_Key_timeout) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
 <LI><a href="#[cd]">SYSMENU_HANDL_CW_Keyer</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_Keyer) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
 <LI><a href="#[ce]">SYSMENU_HANDL_CW_Keyer_WPM</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_Keyer_WPM) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
 <LI><a href="#[cc]">SYSMENU_HANDL_CW_SelfHear</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_SelfHear) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
 <LI><a href="#[d3]">SYSMENU_HANDL_LCDMENU</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_LCDMENU) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[da]">SYSMENU_HANDL_SCREEN_COLOR_THEME</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_COLOR_THEME) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[e0]">SYSMENU_HANDL_SCREEN_FFT_Averaging</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Averaging) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[dd]">SYSMENU_HANDL_SCREEN_FFT_Background</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Background) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[db]">SYSMENU_HANDL_SCREEN_FFT_Color</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Color) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[df]">SYSMENU_HANDL_SCREEN_FFT_Compressor</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Compressor) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[de]">SYSMENU_HANDL_SCREEN_FFT_Enabled</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Enabled) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[dc]">SYSMENU_HANDL_SCREEN_FFT_Grid</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Grid) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[e1]">SYSMENU_HANDL_SCREEN_FFT_Window</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Window) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[d9]">SYSMENU_HANDL_SCREEN_FFT_Zoom</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Zoom) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
 <LI><a href="#[d5]">SYSMENU_HANDL_SERVICESMENU</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SERVICESMENU) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[d6]">SYSMENU_HANDL_SETTIME</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SETTIME) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[e2]">SYSMENU_HANDL_SWR_BAND_START</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SWR_BAND_START) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_services_handlers)
 <LI><a href="#[e3]">SYSMENU_HANDL_SWR_HF_START</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SWR_HF_START) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_services_handlers)
 <LI><a href="#[d0]">SYSMENU_HANDL_TRXMENU</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRXMENU) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
 <LI><a href="#[ec]">SYSMENU_HANDL_TRX_ATT_STEP</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_ATT_STEP) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[e6]">SYSMENU_HANDL_TRX_AutoGain</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_AutoGain) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[e5]">SYSMENU_HANDL_TRX_BandMap</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_BandMap) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[ed]">SYSMENU_HANDL_TRX_DEBUG_CONSOLE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_DEBUG_CONSOLE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[eb]">SYSMENU_HANDL_TRX_ENC_ACCELERATE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_ENC_ACCELERATE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[ea]">SYSMENU_HANDL_TRX_FRQ_FAST_STEP</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_FRQ_FAST_STEP) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[e9]">SYSMENU_HANDL_TRX_FRQ_STEP</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_FRQ_STEP) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[ef]">SYSMENU_HANDL_TRX_LINEIN</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_LINEIN) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[ee]">SYSMENU_HANDL_TRX_MICIN</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_MICIN) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[e4]">SYSMENU_HANDL_TRX_RFPower</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_RFPower) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[e8]">SYSMENU_HANDL_TRX_SHIFT_INTERVAL</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_SHIFT_INTERVAL) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[f1]">SYSMENU_HANDL_TRX_SetCallsign</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_SetCallsign) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[f2]">SYSMENU_HANDL_TRX_TRANSV_ENABLE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_TRANSV_ENABLE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[f3]">SYSMENU_HANDL_TRX_TRANSV_OFFSET</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_TRANSV_OFFSET) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[e7]">SYSMENU_HANDL_TRX_TWO_SIGNAL_TUNE</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_TWO_SIGNAL_TUNE) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[f0]">SYSMENU_HANDL_TRX_USBIN</a> from lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_USBIN) referenced from lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
 <LI><a href="#[40]">SysTick_Handler</a> from lto-llvm-ea22a7.o(.text.SysTick_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[92]">SystemInit</a> from lto-llvm-ea22a7.o(.text.SystemInit) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[43]">TAMP_STAMP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[59]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5c]">TIM1_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5b]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5a]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5d]">TIM2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5e]">TIM3_IRQHandler</a> from lto-llvm-ea22a7.o(.text.TIM3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5f]">TIM4_IRQHandler</a> from lto-llvm-ea22a7.o(.text.TIM4_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[73]">TIM5_IRQHandler</a> from lto-llvm-ea22a7.o(.text.TIM5_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[77]">TIM6_DAC_IRQHandler</a> from lto-llvm-ea22a7.o(.text.TIM6_DAC_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[78]">TIM7_IRQHandler</a> from lto-llvm-ea22a7.o(.text.TIM7_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6c]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6f]">TIM8_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6e]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6d]">TIM8_UP_TIM13_IRQHandler</a> from lto-llvm-ea22a7.o(.text.TIM8_UP_TIM13_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9c]">UA3REO_I2SEx_DMAErr</a> from lto-llvm-ea22a7.o(.text.UA3REO_I2SEx_DMAErr) referenced 2 times from lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
 <LI><a href="#[9b]">UA3REO_I2SEx_TxRxDMACplt</a> from lto-llvm-ea22a7.o(.text.UA3REO_I2SEx_TxRxDMACplt) referenced 2 times from lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
 <LI><a href="#[9a]">UA3REO_I2SEx_TxRxDMAHalfCplt</a> from lto-llvm-ea22a7.o(.text.UA3REO_I2SEx_TxRxDMAHalfCplt) referenced 2 times from lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
 <LI><a href="#[75]">UART4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[76]">UART5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[66]">USART1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[67]">USART2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[68]">USART3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[88]">USART6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5]">USBD_FS_ConfigStrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_ConfigStrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[0]">USBD_FS_DeviceDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_DeviceDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[6]">USBD_FS_Interface1StrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_Interface1StrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[7]">USBD_FS_Interface2StrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_Interface2StrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[8]">USBD_FS_Interface3StrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_Interface3StrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[1]">USBD_FS_LangIDStrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_LangIDStrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[2]">USBD_FS_ManufacturerStrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_ManufacturerStrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[3]">USBD_FS_ProductStrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_ProductStrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[4]">USBD_FS_SerialStrDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_FS_SerialStrDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.FS_Desc)
 <LI><a href="#[2a]">USBD_UA3REO_DataIn</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_DataIn) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[2b]">USBD_UA3REO_DataOut</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_DataOut) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[26]">USBD_UA3REO_DeInit</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_DeInit) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[29]">USBD_UA3REO_EP0_RxReady</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_EP0_RxReady) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[28]">USBD_UA3REO_EP0_TxReady</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_EP0_TxReady) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[30]">USBD_UA3REO_GetDeviceQualifierDescriptor</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_GetDeviceQualifierDescriptor) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[2f]">USBD_UA3REO_GetFSCfgDesc</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_GetFSCfgDesc) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[25]">USBD_UA3REO_Init</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_Init) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[2d]">USBD_UA3REO_IsoINIncomplete</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_IsoINIncomplete) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[2e]">USBD_UA3REO_IsoOutIncomplete</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_IsoOutIncomplete) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[2c]">USBD_UA3REO_SOF</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_SOF) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[27]">USBD_UA3REO_Setup</a> from lto-llvm-ea22a7.o(.text.USBD_UA3REO_Setup) referenced 2 times from lto-llvm-ea22a7.o(.data.USBD_UA3REO)
 <LI><a href="#[3c]">UsageFault_Handler</a> from lto-llvm-ea22a7.o(.text.UsageFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[41]">WWDG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[93]">__main</a> from __main.o(!!!main) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[96]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[95]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[94]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[93]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[f6]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[226]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[227]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[228]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[229]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[22a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[f7]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[12d]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[f9]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[fa]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[fb]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[fd]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ff]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[100]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[101]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[103]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[22b]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[105]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[107]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[22c]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[115]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[109]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[10b]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[22d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[22e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[10d]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[22f]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[230]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[231]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[232]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[233]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[110]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[234]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[235]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[236]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[237]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[238]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[239]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[23a]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[23b]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[23c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[23d]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[23e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[23f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[240]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[11a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[241]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[242]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[243]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[244]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[245]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[246]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[247]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[f5]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[248]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[112]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[114]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[249]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[116]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 780 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; LoadCalibration &rArr; SaveCalibration &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24a]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[151]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[119]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[24b]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[11b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[37]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[150]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[11d]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_Init
</UL>

<P><STRONG><a name="[120]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_DeInit
</UL>

<P><STRONG><a name="[121]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint8
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint32
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint16
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_int16
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_float32
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSystemMenuElement
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SETTIME
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayTopButtons
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayFreqInfo
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[124]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[125]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[126]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[127]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[123]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[fe]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[129]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[102]"></a>_printf_int_oct</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, _printf_oct_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[24c]"></a>_printf_longlong_oct</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_oct_int.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[24d]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[12e]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1b7]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[182]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSymbols
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_KEYER
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_BANDMAP
</UL>

<P><STRONG><a name="[19b]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint8
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint32
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint16
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_str3
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_int16
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_float32
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSymbols
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1b9]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSymbols
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[131]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAT_Receive_FS
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1de]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7em.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFT450Mode
</UL>

<P><STRONG><a name="[24e]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[251]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[134]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[10c]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[136]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[257]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[138]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp2f
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[128]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[13f]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[142]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[122]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[94]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[143]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[106]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[144]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[145]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[108]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[146]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[130]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[149]"></a>_c16rtomb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, _c16rtomb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[12a]"></a>_wcrtomb</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, _c16rtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[155]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoRxAGC
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAT_Receive_FS
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processAutoNotchReduction
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettings
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[258]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAT_Receive_FS
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_start_i2s_and_dma
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_Bootloader
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[14a]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[157]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[25b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[25c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_c16rtomb
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[10e]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[133]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[25d]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[141]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[148]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[13a]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[135]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[15d]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_afterPrintFFT
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAT_Receive_FS
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint8
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint32
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint16
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_int16
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_float32
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processAutoNotchReduction
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSymbols
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_start_i2s_and_dma
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Restart
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_Bootloader
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReinitAudioFilters
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayTopButtons
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayFreqInfo
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_NOTCH
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1af]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettings
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25e]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[25f]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[14c]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[118]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[14e]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[14d]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[11c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[152]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[153]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[1dd]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[262]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>

<P><STRONG><a name="[154]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[263]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_printWaterfallDMA
</UL>

<P><STRONG><a name="[158]"></a>__aeabi_memset4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[16f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_memset4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
</UL>

<P><STRONG><a name="[3b]"></a>BusFault_Handler</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.BusFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = BusFault_Handler &rArr; LCD_showError &rArr; LCD_doEvents &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DMA1_Stream0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Stream0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DMA1_Stream5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Stream5_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DMA2_Stream1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2_Stream1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DMA2_Stream2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2_Stream2_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.DMA2_Stream5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = DMA2_Stream5_IRQHandler &rArr; FFT_afterPrintFFT &rArr; FFT_printWaterfallDMA
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_afterPrintFFT
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.DMA2_Stream6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = DMA2_Stream6_IRQHandler &rArr; FFT_printWaterfallDMA
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_printWaterfallDMA
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DebugMon_Handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = EXTI0_IRQHandler &rArr; TRX_key_change &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_key_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; TRX_key_change &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = EXTI1_IRQHandler &rArr; TRX_key_change &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_key_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = EXTI2_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; TRX_key_change &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = EXTI3_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; TRX_key_change &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.EXTI9_5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>HardFault_Handler</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = HardFault_Handler &rArr; LCD_showError &rArr; LCD_doEvents &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>MemManage_Handler</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.MemManage_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = MemManage_Handler &rArr; LCD_showError &rArr; LCD_doEvents &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>NMI_Handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 6086 bytes, Stack size 72 bytes, lto-llvm-ea22a7.o(.text.OTG_FS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OTG_FS_IRQHandler &rArr; HAL_PCD_DataOutStageCallback &rArr; USB_EP0StartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StartXfer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_StallEP
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_OpenEP
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DataOutStageCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>PendSV_Handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>SPI3_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SPI3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SVC_Handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SysTick_Handler</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>SystemInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>TIM3_IRQHandler</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = TIM3_IRQHandler &rArr; eventSecRotateSystemMenu &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventSecRotateSystemMenu
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>TIM4_IRQHandler</STRONG> (Thumb, 10040 bytes, Stack size 400 bytes, lto-llvm-ea22a7.o(.text.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = TIM4_IRQHandler &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFT450Mode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_str3
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_core_f32
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_min_f32
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_decimate_f32
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df2T_f32
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>TIM5_IRQHandler</STRONG> (Thumb, 15224 bytes, Stack size 152 bytes, lto-llvm-ea22a7.o(.text.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = TIM5_IRQHandler &rArr; DoRxAGC &rArr; exp2f &rArr; __hardfp_exp2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_frexpf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoRxAGC
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFromCircleBuffer32
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processAutoNotchReduction
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sub_f32
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rms_f32
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mult_f32
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_min_f32
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_max_f32
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df2T_f32
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_add_f32
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModulateFM
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp2f
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 9612 bytes, Stack size 128 bytes, lto-llvm-ea22a7.o(.text.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; SaveSettingsToEEPROM &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_frexpf
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_afterPrintFFT
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint8
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint32
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_int16
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_float32
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Restart
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_key_change
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToEEPROM
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettings
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReinitAudioFilters
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_UNIT_ProcessSensors
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_getTextBounds
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmodf
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floorf
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp2f
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceilf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>TIM7_IRQHandler</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM7_IRQHandler &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.TIM8_UP_TIM13_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = TIM8_UP_TIM13_IRQHandler &rArr; SaveCalibration &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCalibration
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UsageFault_Handler</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.UsageFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = UsageFault_Handler &rArr; LCD_showError &rArr; LCD_doEvents &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[117]"></a>main</STRONG> (Thumb, 12672 bytes, Stack size 88 bytes, lto-llvm-ea22a7.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 780 + Unknown Stack Size
<LI>Call Chain = main &rArr; LoadCalibration &rArr; SaveCalibration &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_endTransmission
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModeFromFreq
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_start_i2s_and_dma
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_RX_mode
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Restart
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToEEPROM
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReinitAudioFilters
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_getTextBounds
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToBootloader
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_InjectedStart
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_InjectedConfigChannel
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_Process
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[13b]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1e0]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[1df]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[1e1]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[1e2]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[13c]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[13d]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1e3]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[140]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[1ed]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp2f
</UL>

<P><STRONG><a name="[17b]"></a>__hardfp_acos</STRONG> (Thumb, 738 bytes, Stack size 72 bytes, acos.o(i.__hardfp_acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __hardfp_acos &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[171]"></a>__hardfp_acosh</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, acosh.o(i.__hardfp_acosh))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __hardfp_acosh &rArr; log &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[1c0]"></a>__hardfp_asinf</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, asinf.o(i.__hardfp_asinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_asinf &rArr; sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1c5]"></a>__hardfp_atan2f</STRONG> (Thumb, 594 bytes, Stack size 32 bytes, atan2f.o(i.__hardfp_atan2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1f2]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[173]"></a>__hardfp_cosh</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, cosh.o(i.__hardfp_cosh))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __hardfp_cosh &rArr; __mathlib_expm1 &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_posinfnan
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[1fc]"></a>__hardfp_exp</STRONG> (Thumb, 714 bytes, Stack size 72 bytes, exp.o(i.__hardfp_exp))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
</UL>

<P><STRONG><a name="[201]"></a>__hardfp_exp2f</STRONG> (Thumb, 406 bytes, Stack size 16 bytes, exp2f.o(i.__hardfp_exp2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __hardfp_exp2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_overflow
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp2f
</UL>

<P><STRONG><a name="[203]"></a>__hardfp_fmodf</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, fmodf.o(i.__hardfp_fmodf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_fmodf &rArr; _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frem
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmodf
</UL>

<P><STRONG><a name="[164]"></a>__hardfp_frexpf</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, frexpf.o(i.__hardfp_frexpf))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoRxAGC
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[205]"></a>__hardfp_log</STRONG> (Thumb, 872 bytes, Stack size 88 bytes, log.o(i.__hardfp_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[1f3]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1f5]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1e6]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1f4]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[206]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[1e4]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1e5]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1fb]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
</UL>

<P><STRONG><a name="[1f7]"></a>__mathlib_dbl_posinfnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_posinfnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_posinfnan &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
</UL>

<P><STRONG><a name="[1ff]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[1f9]"></a>__mathlib_expm1</STRONG> (Thumb, 1268 bytes, Stack size 80 bytes, expm1_i.o(i.__mathlib_expm1))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __mathlib_expm1 &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
</UL>

<P><STRONG><a name="[1ef]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp2f
</UL>

<P><STRONG><a name="[1f1]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[1f0]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
</UL>

<P><STRONG><a name="[202]"></a>__mathlib_flt_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_overflow))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp2f
</UL>

<P><STRONG><a name="[1ee]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp2f
</UL>

<P><STRONG><a name="[1eb]"></a>__mathlib_log1p</STRONG> (Thumb, 982 bytes, Stack size 88 bytes, log1p_i.o(i.__mathlib_log1p))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __mathlib_log1p &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
</UL>

<P><STRONG><a name="[12c]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[17f]"></a>ceilf</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, ceilf.o(i.ceilf))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_printWaterfallDMA
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[178]"></a>cos</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = cos &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[1fa]"></a>exp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exp.o(i.exp))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = exp &rArr; __hardfp_exp &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
</UL>

<P><STRONG><a name="[165]"></a>exp2f</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exp2f.o(i.exp2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = exp2f &rArr; __hardfp_exp2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp2f
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoRxAGC
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReinitAudioFilters
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1f8]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[17e]"></a>floorf</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, floorf.o(i.floorf))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_printWaterfallDMA
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1ca]"></a>fmodf</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fmodf.o(i.fmodf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fmodf &rArr; __hardfp_fmodf &rArr; _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1ea]"></a>log</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, log.o(i.log))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = log &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
</UL>

<P><STRONG><a name="[1d1]"></a>round</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, round.o(i.round))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = round &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
</UL>

<P><STRONG><a name="[1e8]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[1ec]"></a>sqrtf</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrtf.o(i.sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[111]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[96]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[1f6]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[264]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[265]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[266]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[267]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[268]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[175]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[20a]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
</UL>

<P><STRONG><a name="[174]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[20d]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[212]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[17c]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[210]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[207]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[211]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dneq
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deq
</UL>

<P><STRONG><a name="[200]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[213]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1d2]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
</UL>

<P><STRONG><a name="[214]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1d0]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[269]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[179]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[26a]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[26b]"></a>__aeabi_cdcmpge</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)

<P><STRONG><a name="[215]"></a>_dcmpge</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgeq
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgr
</UL>

<P><STRONG><a name="[1fe]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[216]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dls
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dleq
</UL>

<P><STRONG><a name="[219]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_posinfnan
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[217]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[20c]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[20f]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[1fd]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[218]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[208]"></a>_drnd</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, drnd.o(x$fpl$drnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[1e7]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[21a]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[209]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[1e9]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_log1p
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_expm1
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[21c]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[176]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_float32
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSystemMenuElement
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
</UL>

<P><STRONG><a name="[21d]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[26c]"></a>__aeabi_dcmpeq</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[21f]"></a>_deq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[220]"></a>_dneq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[221]"></a>_dgr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[26d]"></a>__aeabi_dcmpge</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[222]"></a>_dgeq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[26e]"></a>__aeabi_dcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[223]"></a>_dleq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[177]"></a>__aeabi_dcmplt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
</UL>

<P><STRONG><a name="[224]"></a>_dls</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[21e]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frem
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_f
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[10a]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[26f]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[270]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[204]"></a>_frem</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, frem_clz.o(x$fpl$frem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
</UL>

<P><STRONG><a name="[20b]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[1bf]"></a>__aeabi_f2lz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2lz
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[225]"></a>_ll_sfrom_f</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[f8]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[fc]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[139]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[95]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[21b]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[20e]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[32]"></a>AUDIO_DeInit_FS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.AUDIO_DeInit_FS))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_AUDIO_fops_FS)
</UL>
<P><STRONG><a name="[31]"></a>AUDIO_Init_FS</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.AUDIO_Init_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AUDIO_Init_FS &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_AUDIO_StartTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_AUDIO_fops_FS)
</UL>
<P><STRONG><a name="[23]"></a>CAT_Control_FS</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.CAT_Control_FS))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
</UL>
<P><STRONG><a name="[22]"></a>CAT_DeInit_FS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.CAT_DeInit_FS))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
</UL>
<P><STRONG><a name="[21]"></a>CAT_Init_FS</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.CAT_Init_FS))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
</UL>
<P><STRONG><a name="[24]"></a>CAT_Receive_FS</STRONG> (Thumb, 166 bytes, Stack size 104 bytes, lto-llvm-ea22a7.o(.text.CAT_Receive_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CAT_Receive_FS &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_CAT_fops_FS)
</UL>
<P><STRONG><a name="[35]"></a>DEBUG_Control_FS</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DEBUG_Control_FS))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
</UL>
<P><STRONG><a name="[34]"></a>DEBUG_DeInit_FS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DEBUG_DeInit_FS))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
</UL>
<P><STRONG><a name="[33]"></a>DEBUG_Init_FS</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.DEBUG_Init_FS))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
</UL>
<P><STRONG><a name="[36]"></a>DEBUG_Receive_FS</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.DEBUG_Receive_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DEBUG_Receive_FS &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_DEBUG_fops_FS)
</UL>
<P><STRONG><a name="[15a]"></a>DEBUG_Transmit_FIFO_Events</STRONG> (Thumb, 438 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.DEBUG_Transmit_FIFO_Events))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init_FS
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint8
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint32
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint16
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_str3
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_int16
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_float32
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UA3REO_I2SEx_DMAErr
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToEEPROM
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[162]"></a>DoRxAGC</STRONG> (Thumb, 920 bytes, Stack size 72 bytes, lto-llvm-ea22a7.o(.text.DoRxAGC))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DoRxAGC &rArr; exp2f &rArr; __hardfp_exp2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_frexpf
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rms_f32
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp2f
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[166]"></a>EEPROM_Read_Data</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.EEPROM_Read_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint8
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Data
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16a]"></a>EEPROM_WaitWrite</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.EEPROM_WaitWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EEPROM_WaitWrite &rArr; SPI_Transmit &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Data
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToEEPROM
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCalibration
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16b]"></a>EEPROM_Write_Data</STRONG> (Thumb, 536 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.EEPROM_Write_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToEEPROM
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCalibration
</UL>

<P><STRONG><a name="[16e]"></a>FFT_Init</STRONG> (Thumb, 1320 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.FFT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FFT_Init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset8
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SCREEN_FFT_Zoom
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SCREEN_FFT_Window
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SCREEN_FFT_Grid
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SCREEN_FFT_Color
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SCREEN_COLOR_THEME
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[170]"></a>FFT_PreInit</STRONG> (Thumb, 2132 bytes, Stack size 152 bytes, lto-llvm-ea22a7.o(.text.FFT_PreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = FFT_PreInit &rArr; __hardfp_acosh &rArr; log &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosh
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosh
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SCREEN_FFT_Window
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[160]"></a>FFT_afterPrintFFT</STRONG> (Thumb, 1076 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.FFT_afterPrintFFT))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = FFT_afterPrintFFT &rArr; FFT_printWaterfallDMA
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_printWaterfallDMA
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>

<P><STRONG><a name="[161]"></a>FFT_printWaterfallDMA</STRONG> (Thumb, 1918 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.FFT_printWaterfallDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = FFT_printWaterfallDMA
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floorf
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceilf
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_afterPrintFFT
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
</UL>

<P><STRONG><a name="[14]"></a>FRONTPANEL_BUTTONHANDLER_AGC</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_AGC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_AGC &rArr; getBandFromFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[15]"></a>FRONTPANEL_BUTTONHANDLER_AGC_SPEED</STRONG> (Thumb, 286 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_AGC_SPEED))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[a]"></a>FRONTPANEL_BUTTONHANDLER_ATT</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_ATT))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_ATT &rArr; getBandFromFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[b]"></a>FRONTPANEL_BUTTONHANDLER_ATTHOLD</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_ATTHOLD))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_ATTHOLD &rArr; getBandFromFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[f]"></a>FRONTPANEL_BUTTONHANDLER_ArB</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_ArB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_ArB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[e]"></a>FRONTPANEL_BUTTONHANDLER_AsB</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_AsB))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_AsB &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[1a]"></a>FRONTPANEL_BUTTONHANDLER_BANDMAP</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BANDMAP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_BANDMAP &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[20]"></a>FRONTPANEL_BUTTONHANDLER_BAND_N</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BAND_N))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_BAND_N &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
</UL>
<P><STRONG><a name="[1f]"></a>FRONTPANEL_BUTTONHANDLER_BAND_P</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BAND_P))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_BAND_P &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
</UL>
<P><STRONG><a name="[c]"></a>FRONTPANEL_BUTTONHANDLER_BW</STRONG> (Thumb, 460 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_BW))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[16]"></a>FRONTPANEL_BUTTONHANDLER_CLAR</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_CLAR))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[13]"></a>FRONTPANEL_BUTTONHANDLER_FAST</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_FAST))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[d]"></a>FRONTPANEL_BUTTONHANDLER_HPF</STRONG> (Thumb, 338 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_HPF))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[1c]"></a>FRONTPANEL_BUTTONHANDLER_KEYER</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_KEYER))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_KEYER &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[18]"></a>FRONTPANEL_BUTTONHANDLER_LOCK</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_LOCK))
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-ea22a7.o(.text.FRONTPANEL_Process)
<LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[1d]"></a>FRONTPANEL_BUTTONHANDLER_MODE_N</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_MODE_N))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_MODE_N &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
</UL>
<P><STRONG><a name="[1e]"></a>FRONTPANEL_BUTTONHANDLER_MODE_P</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_MODE_P))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_MODE_P &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_Static_Buttons)
</UL>
<P><STRONG><a name="[17]"></a>FRONTPANEL_BUTTONHANDLER_MUTE</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_MUTE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[12]"></a>FRONTPANEL_BUTTONHANDLER_NOTCH</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_NOTCH))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_NOTCH &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[9]"></a>FRONTPANEL_BUTTONHANDLER_PRE</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_PRE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_PRE &rArr; getBandFromFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[10]"></a>FRONTPANEL_BUTTONHANDLER_RF_POWER</STRONG> (Thumb, 286 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_RF_POWER))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[11]"></a>FRONTPANEL_BUTTONHANDLER_TUNE</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_TUNE))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = FRONTPANEL_BUTTONHANDLER_TUNE &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[19]"></a>FRONTPANEL_BUTTONHANDLER_VOLUME</STRONG> (Thumb, 286 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_VOLUME))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[1b]"></a>FRONTPANEL_BUTTONHANDLER_WPM</STRONG> (Thumb, 286 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_BUTTONHANDLER_WPM))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.PERIPH_FrontPanel_BottomScroll_Buttons)
</UL>
<P><STRONG><a name="[184]"></a>FRONTPANEL_ENCODER_Rotated</STRONG> (Thumb, 432 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_ENCODER_Rotated))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = FRONTPANEL_ENCODER_Rotated &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SETTIME
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[185]"></a>FRONTPANEL_Process</STRONG> (Thumb, 1430 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.FRONTPANEL_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = FRONTPANEL_Process &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_TIM13_IRQHandler
</UL>

<P><STRONG><a name="[1d9]"></a>HAL_ADCEx_InjectedConfigChannel</STRONG> (Thumb, 340 bytes, Stack size 20 bytes, lto-llvm-ea22a7.o(.text.HAL_ADCEx_InjectedConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_ADCEx_InjectedConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc]"></a>HAL_ADCEx_InjectedStart</STRONG> (Thumb, 206 bytes, Stack size 4 bytes, lto-llvm-ea22a7.o(.text.HAL_ADCEx_InjectedStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_ADCEx_InjectedStart
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 300 bytes, Stack size 20 bytes, lto-llvm-ea22a7.o(.text.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[187]"></a>HAL_ADC_Init</STRONG> (Thumb, 542 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_ADC_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 442 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[18a]"></a>HAL_DMA_Init</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[191]"></a>HAL_DMA_PollForTransfer</STRONG> (Thumb, 388 bytes, Stack size 28 bytes, lto-llvm-ea22a7.o(.text.HAL_DMA_PollForTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_PollForTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFromCircleBuffer32
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[16d]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 3104 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; TRX_key_change &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_key_change
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_ENCODER_Rotated
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[188]"></a>HAL_GPIO_Init</STRONG> (Thumb, 432 bytes, Stack size 44 bytes, lto-llvm-ea22a7.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_shift_out
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_get_ack
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_endTransmission
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_TXRX_mode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_RX_mode
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Restart
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>HAL_I2SEx_FullDuplex_IRQHandler</STRONG> (Thumb, 1014 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.HAL_I2SEx_FullDuplex_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_I2SEx_FullDuplex_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.main)
</UL>
<P><STRONG><a name="[189]"></a>HAL_I2S_MspInit</STRONG> (Thumb, 396 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.HAL_I2S_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_I2S_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18b]"></a>HAL_PCD_DataOutStageCallback</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.HAL_PCD_DataOutStageCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PCD_DataOutStageCallback &rArr; USB_EP0StartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[1d7]"></a>HAL_RTC_Init</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a9]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 732 bytes, Stack size 28 bytes, lto-llvm-ea22a7.o(.text.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>

<P><STRONG><a name="[18d]"></a>HAL_SRAM_Init</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.HAL_SRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_SRAM_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1da]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 986 bytes, Stack size 12 bytes, lto-llvm-ea22a7.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1db]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 400 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_ConfigClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b1]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.HAL_TIM_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_TIM13_IRQHandler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>I2SEx_TxRxDMACplt</STRONG> (Thumb, 422 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.I2SEx_TxRxDMACplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2SEx_TxRxDMACplt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
</UL>
<P><STRONG><a name="[99]"></a>I2SEx_TxRxDMAError</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.I2SEx_TxRxDMAError))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
</UL>
<P><STRONG><a name="[97]"></a>I2SEx_TxRxDMAHalfCplt</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.I2SEx_TxRxDMAHalfCplt))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
</UL>
<P><STRONG><a name="[9d]"></a>I2S_IRQHandler</STRONG> (Thumb, 228 bytes, Stack size 12 bytes, lto-llvm-ea22a7.o(.text.I2S_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2S_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.main)
</UL>
<P><STRONG><a name="[18e]"></a>JumpToBootloader</STRONG> (Thumb, 764 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.JumpToBootloader))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = JumpToBootloader &rArr; LCD_showError &rArr; LCD_doEvents &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USB_DevDisconnect
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[190]"></a>LCDDriver_Fill</STRONG> (Thumb, 600 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCDDriver_Fill &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventSecRotateSystemMenu
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_TRX_SetCallsign
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SETTIME
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[192]"></a>LCDDriver_Fill_RectXY</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_Fill_RectXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCDDriver_Fill_RectXY &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventSecRotateSystemMenu
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSystemMenuElement
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_TRX_SetCallsign
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_DrawGraphCol
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayTopButtons
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayFreqInfo
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawRectXY
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_Triangle
</UL>

<P><STRONG><a name="[193]"></a>LCDDriver_Fill_Triangle</STRONG> (Thumb, 452 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_Fill_Triangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = LCDDriver_Fill_Triangle &rArr; LCDDriver_Fill_RectXY &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
</UL>

<P><STRONG><a name="[1a2]"></a>LCDDriver_Init</STRONG> (Thumb, 736 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_Init))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>LCDDriver_drawChar</STRONG> (Thumb, 872 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_drawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCDDriver_drawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventSecRotateSystemMenu
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_TRX_SetCallsign
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SETTIME
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printText
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19e]"></a>LCDDriver_drawLine</STRONG> (Thumb, 284 bytes, Stack size 36 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_drawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCDDriver_drawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_DrawGraphCol
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
</UL>

<P><STRONG><a name="[194]"></a>LCDDriver_drawRectXY</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_drawRectXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCDDriver_drawRectXY &rArr; LCDDriver_Fill_RectXY &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
</UL>

<P><STRONG><a name="[19d]"></a>LCDDriver_getTextBounds</STRONG> (Thumb, 452 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_getTextBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCDDriver_getTextBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayTopButtons
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[195]"></a>LCDDriver_printText</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_printText))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCDDriver_printText &rArr; LCDDriver_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSystemMenuElement
</UL>

<P><STRONG><a name="[198]"></a>LCDDriver_printTextFont</STRONG> (Thumb, 886 bytes, Stack size 72 bytes, lto-llvm-ea22a7.o(.text.LCDDriver_printTextFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCDDriver_printTextFont
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayTopButtons
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayFreqInfo
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[197]"></a>LCD_displayFreqInfo</STRONG> (Thumb, 760 bytes, Stack size 96 bytes, lto-llvm-ea22a7.o(.text.LCD_displayFreqInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = LCD_displayFreqInfo &rArr; addSymbols &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSymbols
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
</UL>

<P><STRONG><a name="[19a]"></a>LCD_displayStatusInfoBar</STRONG> (Thumb, 7092 bytes, Stack size 224 bytes, lto-llvm-ea22a7.o(.text.LCD_displayStatusInfoBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = LCD_displayStatusInfoBar &rArr; addSymbols &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSymbols
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawRectXY
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
</UL>

<P><STRONG><a name="[19c]"></a>LCD_displayStatusInfoGUI</STRONG> (Thumb, 2008 bytes, Stack size 88 bytes, lto-llvm-ea22a7.o(.text.LCD_displayStatusInfoGUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = LCD_displayStatusInfoGUI &rArr; LCDDriver_Fill_Triangle &rArr; LCDDriver_Fill_RectXY &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_getTextBounds
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawRectXY
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawLine
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_Triangle
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
</UL>

<P><STRONG><a name="[19f]"></a>LCD_displayTopButtons</STRONG> (Thumb, 1476 bytes, Stack size 128 bytes, lto-llvm-ea22a7.o(.text.LCD_displayTopButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LCD_displayTopButtons &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_getTextBounds
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
</UL>

<P><STRONG><a name="[1a0]"></a>LCD_doEvents</STRONG> (Thumb, 634 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.LCD_doEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = LCD_doEvents &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSystemMenuElement
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayTopButtons
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoGUI
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayFreqInfo
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_getTextBounds
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawRectXY
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_showError
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[15c]"></a>LCD_showError</STRONG> (Thumb, 432 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.LCD_showError))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = LCD_showError &rArr; LCD_doEvents &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printTextFont
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_getTextBounds
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToBootloader
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[1a3]"></a>LoadCalibration</STRONG> (Thumb, 988 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.LoadCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = LoadCalibration &rArr; SaveCalibration &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint8
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCalibration
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f]"></a>MX_USB_DevDisconnect</STRONG> (Thumb, 942 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.MX_USB_DevDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MX_USB_DevDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Restart
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToBootloader
</UL>

<P><STRONG><a name="[1bd]"></a>ModulateFM</STRONG> (Thumb, 856 bytes, Stack size 88 bytes, lto-llvm-ea22a7.o(.text.ModulateFM))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ModulateFM
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1ad]"></a>RF_UNIT_ProcessSensors</STRONG> (Thumb, 512 bytes, Stack size 4 bytes, lto-llvm-ea22a7.o(.text.RF_UNIT_ProcessSensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RF_UNIT_ProcessSensors
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1a7]"></a>ReinitAudioFilters</STRONG> (Thumb, 2120 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.ReinitAudioFilters))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = ReinitAudioFilters &rArr; sendToDebug_uint16 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_uint16
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp2f
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[167]"></a>SPI_Transmit</STRONG> (Thumb, 2048 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SPI_Transmit &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Data
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToEEPROM
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCalibration
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_Process
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1aa]"></a>SWR_DrawGraphCol</STRONG> (Thumb, 508 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.SWR_DrawGraphCol))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SWR_DrawGraphCol &rArr; LCDDriver_Fill_RectXY &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawLine
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
</UL>

<P><STRONG><a name="[1ab]"></a>SWR_EncRotate</STRONG> (Thumb, 458 bytes, Stack size 112 bytes, lto-llvm-ea22a7.o(.text.SWR_EncRotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = SWR_EncRotate &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_DrawGraphCol
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SWR_HF_START
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SWR_BAND_START
</UL>

<P><STRONG><a name="[1ac]"></a>SWR_Start</STRONG> (Thumb, 2264 bytes, Stack size 184 bytes, lto-llvm-ea22a7.o(.text.SWR_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = SWR_Start &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SWR_HF_START
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SWR_BAND_START
</UL>

<P><STRONG><a name="[d4]"></a>SYSMENU_HANDL_ADCMENU</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_ADCMENU))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[9f]"></a>SYSMENU_HANDL_ADC_DRIVER</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_ADC_DRIVER))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SYSMENU_HANDL_ADC_DRIVER &rArr; getBandFromFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_adc_handlers)
</UL>
<P><STRONG><a name="[a0]"></a>SYSMENU_HANDL_ADC_SHDN</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_ADC_SHDN))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_adc_handlers)
</UL>
<P><STRONG><a name="[d1]"></a>SYSMENU_HANDL_AUDIOMENU</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIOMENU))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[a3]"></a>SYSMENU_HANDL_AUDIO_AGC_GAIN_TARGET</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_AGC_GAIN_TARGET))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[ac]"></a>SYSMENU_HANDL_AUDIO_AM_LPF_pass</STRONG> (Thumb, 782 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_AM_LPF_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SYSMENU_HANDL_AUDIO_AM_LPF_pass &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b8]"></a>SYSMENU_HANDL_AUDIO_Beeper</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_Beeper))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[aa]"></a>SYSMENU_HANDL_AUDIO_CW_HPF_pass</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_CW_HPF_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SYSMENU_HANDL_AUDIO_CW_HPF_pass &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[ab]"></a>SYSMENU_HANDL_AUDIO_CW_LPF_pass</STRONG> (Thumb, 748 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_CW_LPF_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SYSMENU_HANDL_AUDIO_CW_LPF_pass &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a6]"></a>SYSMENU_HANDL_AUDIO_DNR_AVERAGE</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_DNR_AVERAGE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a7]"></a>SYSMENU_HANDL_AUDIO_DNR_MINMAL</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_DNR_MINMAL))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a5]"></a>SYSMENU_HANDL_AUDIO_DNR_THRES</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_DNR_THRES))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[ae]"></a>SYSMENU_HANDL_AUDIO_FMSquelch</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_FMSquelch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SYSMENU_HANDL_AUDIO_FMSquelch &rArr; getBandFromFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[ad]"></a>SYSMENU_HANDL_AUDIO_FM_LPF_pass</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_FM_LPF_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SYSMENU_HANDL_AUDIO_FM_LPF_pass &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a2]"></a>SYSMENU_HANDL_AUDIO_IFGain</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_IFGain))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b1]"></a>SYSMENU_HANDL_AUDIO_MIC_EQ_HIG</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_EQ_HIG))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[af]"></a>SYSMENU_HANDL_AUDIO_MIC_EQ_LOW</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_EQ_LOW))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b0]"></a>SYSMENU_HANDL_AUDIO_MIC_EQ_MID</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_EQ_MID))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a4]"></a>SYSMENU_HANDL_AUDIO_MIC_Gain</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_MIC_Gain))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b6]"></a>SYSMENU_HANDL_AUDIO_RX_AGC_CW_Speed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_AGC_CW_Speed))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b5]"></a>SYSMENU_HANDL_AUDIO_RX_AGC_SSB_Speed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_AGC_SSB_Speed))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b4]"></a>SYSMENU_HANDL_AUDIO_RX_EQ_HIG</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_EQ_HIG))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b2]"></a>SYSMENU_HANDL_AUDIO_RX_EQ_LOW</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_EQ_LOW))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b3]"></a>SYSMENU_HANDL_AUDIO_RX_EQ_MID</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_RX_EQ_MID))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a8]"></a>SYSMENU_HANDL_AUDIO_SSB_HPF_pass</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_SSB_HPF_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SYSMENU_HANDL_AUDIO_SSB_HPF_pass &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a9]"></a>SYSMENU_HANDL_AUDIO_SSB_LPF_pass</STRONG> (Thumb, 484 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_SSB_LPF_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SYSMENU_HANDL_AUDIO_SSB_LPF_pass &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[b7]"></a>SYSMENU_HANDL_AUDIO_TX_AGCSpeed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_TX_AGCSpeed))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[a1]"></a>SYSMENU_HANDL_AUDIO_VOLUME</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_AUDIO_VOLUME))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_audio_handlers)
</UL>
<P><STRONG><a name="[d7]"></a>SYSMENU_HANDL_Bootloader</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_Bootloader))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSMENU_HANDL_Bootloader &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[d8]"></a>SYSMENU_HANDL_CALIBRATIONMENU</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIBRATIONMENU))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[c0]"></a>SYSMENU_HANDL_CALIB_CICCOMP_SHIFT</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_CICCOMP_SHIFT))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[bf]"></a>SYSMENU_HANDL_CALIB_CIC_SHIFT</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_CIC_SHIFT))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c2]"></a>SYSMENU_HANDL_CALIB_DAC_SHIFT</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_DAC_SHIFT))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[bc]"></a>SYSMENU_HANDL_CALIB_ENCODER2_DEBOUNCE</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER2_DEBOUNCE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[ba]"></a>SYSMENU_HANDL_CALIB_ENCODER2_INVERT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER2_INVERT))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[bb]"></a>SYSMENU_HANDL_CALIB_ENCODER_DEBOUNCE</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_DEBOUNCE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[b9]"></a>SYSMENU_HANDL_CALIB_ENCODER_INVERT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_INVERT))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[be]"></a>SYSMENU_HANDL_CALIB_ENCODER_ON_FALLING</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_ON_FALLING))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[bd]"></a>SYSMENU_HANDL_CALIB_ENCODER_SLOW_RATE</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_ENCODER_SLOW_RATE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c5]"></a>SYSMENU_HANDL_CALIB_RF_GAIN_HF</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_HF))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c6]"></a>SYSMENU_HANDL_CALIB_RF_GAIN_HF_HIGH</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_HF_HIGH))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c4]"></a>SYSMENU_HANDL_CALIB_RF_GAIN_HF_LOW</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_HF_LOW))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c3]"></a>SYSMENU_HANDL_CALIB_RF_GAIN_LF</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_RF_GAIN_LF))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c8]"></a>SYSMENU_HANDL_CALIB_SWR_TRANS_RATE</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_SWR_TRANS_RATE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c7]"></a>SYSMENU_HANDL_CALIB_S_METER</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_S_METER))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c1]"></a>SYSMENU_HANDL_CALIB_TXCICCOMP_SHIFT</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_TXCICCOMP_SHIFT))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[c9]"></a>SYSMENU_HANDL_CALIB_VOLT</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CALIB_VOLT))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_calibration_handlers)
</UL>
<P><STRONG><a name="[d2]"></a>SYSMENU_HANDL_CWMENU</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CWMENU))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[cb]"></a>SYSMENU_HANDL_CW_GENERATOR_SHIFT_HZ</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_GENERATOR_SHIFT_HZ))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
</UL>
<P><STRONG><a name="[cf]"></a>SYSMENU_HANDL_CW_GaussFilter</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_GaussFilter))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
</UL>
<P><STRONG><a name="[ca]"></a>SYSMENU_HANDL_CW_Key_timeout</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_Key_timeout))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
</UL>
<P><STRONG><a name="[cd]"></a>SYSMENU_HANDL_CW_Keyer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_Keyer))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
</UL>
<P><STRONG><a name="[ce]"></a>SYSMENU_HANDL_CW_Keyer_WPM</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_Keyer_WPM))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
</UL>
<P><STRONG><a name="[cc]"></a>SYSMENU_HANDL_CW_SelfHear</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_CW_SelfHear))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_cw_handlers)
</UL>
<P><STRONG><a name="[d3]"></a>SYSMENU_HANDL_LCDMENU</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_LCDMENU))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[da]"></a>SYSMENU_HANDL_SCREEN_COLOR_THEME</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_COLOR_THEME))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SYSMENU_HANDL_SCREEN_COLOR_THEME &rArr; FFT_Init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[e0]"></a>SYSMENU_HANDL_SCREEN_FFT_Averaging</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Averaging))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[dd]"></a>SYSMENU_HANDL_SCREEN_FFT_Background</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Background))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[db]"></a>SYSMENU_HANDL_SCREEN_FFT_Color</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Color))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SYSMENU_HANDL_SCREEN_FFT_Color &rArr; FFT_Init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[df]"></a>SYSMENU_HANDL_SCREEN_FFT_Compressor</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Compressor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[de]"></a>SYSMENU_HANDL_SCREEN_FFT_Enabled</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Enabled))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[dc]"></a>SYSMENU_HANDL_SCREEN_FFT_Grid</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Grid))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SYSMENU_HANDL_SCREEN_FFT_Grid &rArr; FFT_Init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[e1]"></a>SYSMENU_HANDL_SCREEN_FFT_Window</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = SYSMENU_HANDL_SCREEN_FFT_Window &rArr; FFT_PreInit &rArr; __hardfp_acosh &rArr; log &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_PreInit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[d9]"></a>SYSMENU_HANDL_SCREEN_FFT_Zoom</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SCREEN_FFT_Zoom))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SYSMENU_HANDL_SCREEN_FFT_Zoom &rArr; FFT_Init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_screen_handlers)
</UL>
<P><STRONG><a name="[d5]"></a>SYSMENU_HANDL_SERVICESMENU</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SERVICESMENU))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[d6]"></a>SYSMENU_HANDL_SETTIME</STRONG> (Thumb, 1718 bytes, Stack size 96 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SETTIME))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = SYSMENU_HANDL_SETTIME &rArr; addSymbols &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSymbols
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_ENCODER_Rotated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[e2]"></a>SYSMENU_HANDL_SWR_BAND_START</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SWR_BAND_START))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = SYSMENU_HANDL_SWR_BAND_START &rArr; SWR_Start &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBandFromFreq
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_services_handlers)
</UL>
<P><STRONG><a name="[e3]"></a>SYSMENU_HANDL_SWR_HF_START</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_SWR_HF_START))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = SYSMENU_HANDL_SWR_HF_START &rArr; SWR_Start &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_EncRotate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_services_handlers)
</UL>
<P><STRONG><a name="[d0]"></a>SYSMENU_HANDL_TRXMENU</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRXMENU))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_handlers)
</UL>
<P><STRONG><a name="[ec]"></a>SYSMENU_HANDL_TRX_ATT_STEP</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_ATT_STEP))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[e6]"></a>SYSMENU_HANDL_TRX_AutoGain</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_AutoGain))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[e5]"></a>SYSMENU_HANDL_TRX_BandMap</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_BandMap))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[ed]"></a>SYSMENU_HANDL_TRX_DEBUG_CONSOLE</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_DEBUG_CONSOLE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[eb]"></a>SYSMENU_HANDL_TRX_ENC_ACCELERATE</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_ENC_ACCELERATE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[ea]"></a>SYSMENU_HANDL_TRX_FRQ_FAST_STEP</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_FRQ_FAST_STEP))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[e9]"></a>SYSMENU_HANDL_TRX_FRQ_STEP</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_FRQ_STEP))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[ef]"></a>SYSMENU_HANDL_TRX_LINEIN</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_LINEIN))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = SYSMENU_HANDL_TRX_LINEIN &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[ee]"></a>SYSMENU_HANDL_TRX_MICIN</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_MICIN))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = SYSMENU_HANDL_TRX_MICIN &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[e4]"></a>SYSMENU_HANDL_TRX_RFPower</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_RFPower))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[e8]"></a>SYSMENU_HANDL_TRX_SHIFT_INTERVAL</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_SHIFT_INTERVAL))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[f1]"></a>SYSMENU_HANDL_TRX_SetCallsign</STRONG> (Thumb, 376 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_SetCallsign))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SYSMENU_HANDL_TRX_SetCallsign &rArr; LCDDriver_Fill_RectXY &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[f2]"></a>SYSMENU_HANDL_TRX_TRANSV_ENABLE</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_TRANSV_ENABLE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[f3]"></a>SYSMENU_HANDL_TRX_TRANSV_OFFSET</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_TRANSV_OFFSET))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[e7]"></a>SYSMENU_HANDL_TRX_TWO_SIGNAL_TUNE</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_TWO_SIGNAL_TUNE))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[f0]"></a>SYSMENU_HANDL_TRX_USBIN</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_HANDL_TRX_USBIN))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = SYSMENU_HANDL_TRX_USBIN &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.rodata.sysmenu_trx_handlers)
</UL>
<P><STRONG><a name="[186]"></a>SYSMENU_drawSystemMenu</STRONG> (Thumb, 1268 bytes, Stack size 112 bytes, lto-llvm-ea22a7.o(.text.SYSMENU_drawSystemMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSystemMenuElement
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SETTIME
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_DrawGraphCol
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_UNIT_ProcessSensors
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventSecRotateSystemMenu
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_Process
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1a4]"></a>SaveCalibration</STRONG> (Thumb, 636 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.SaveCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = SaveCalibration &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Data
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitWrite
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_TIM13_IRQHandler
</UL>

<P><STRONG><a name="[1ae]"></a>SaveSettings</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.SaveSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SaveSettings &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1b0]"></a>SaveSettingsToEEPROM</STRONG> (Thumb, 632 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.SaveSettingsToEEPROM))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = SaveSettingsToEEPROM &rArr; EEPROM_Write_Data &rArr; EEPROM_Read_Data &rArr;  EEPROM_Read_Data (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Data
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitWrite
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_strln
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[183]"></a>TRX_Restart_Mode</STRONG> (Thumb, 2438 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.TRX_Restart_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_endTransmission
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_start_i2s_and_dma
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_TXRX_mode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_RX_mode
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_key_change
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_TRX_USBIN
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_TRX_MICIN
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_TRX_LINEIN
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_Process
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_TUNE
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[16c]"></a>TRX_key_change</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.TRX_key_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = TRX_key_change &rArr; TRX_Restart_Mode &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[180]"></a>TRX_setFrequency</STRONG> (Thumb, 1040 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.TRX_setFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModeFromFreq
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWR_Start
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_Process
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_ENCODER_Rotated
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_BAND_P
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_BAND_N
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_AsB
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[181]"></a>TRX_setMode</STRONG> (Thumb, 308 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.TRX_setMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_start_i2s_and_dma
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_TXRX_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_AUDIO_SSB_LPF_pass
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_AUDIO_SSB_HPF_pass
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_AUDIO_FM_LPF_pass
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_AUDIO_CW_LPF_pass
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_AUDIO_CW_HPF_pass
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_AUDIO_AM_LPF_pass
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_MODE_P
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_MODE_N
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_BAND_P
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_BAND_N
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_AsB
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>UA3REO_I2SEx_DMAErr</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.UA3REO_I2SEx_DMAErr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UA3REO_I2SEx_DMAErr &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
</UL>
<P><STRONG><a name="[9b]"></a>UA3REO_I2SEx_TxRxDMACplt</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.UA3REO_I2SEx_TxRxDMACplt))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
</UL>
<P><STRONG><a name="[9a]"></a>UA3REO_I2SEx_TxRxDMAHalfCplt</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.UA3REO_I2SEx_TxRxDMAHalfCplt))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma)
</UL>
<P><STRONG><a name="[159]"></a>USBD_AUDIO_StartTransmit</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.USBD_AUDIO_StartTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBD_AUDIO_StartTransmit &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init_FS
</UL>

<P><STRONG><a name="[5]"></a>USBD_FS_ConfigStrDescriptor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_ConfigStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_FS_ConfigStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[0]"></a>USBD_FS_DeviceDescriptor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_DeviceDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[6]"></a>USBD_FS_Interface1StrDescriptor</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_Interface1StrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_FS_Interface1StrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[7]"></a>USBD_FS_Interface2StrDescriptor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_Interface2StrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_FS_Interface2StrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[8]"></a>USBD_FS_Interface3StrDescriptor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_Interface3StrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_FS_Interface3StrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[1]"></a>USBD_FS_LangIDStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_LangIDStrDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[2]"></a>USBD_FS_ManufacturerStrDescriptor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_ManufacturerStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_FS_ManufacturerStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[3]"></a>USBD_FS_ProductStrDescriptor</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_ProductStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_FS_ProductStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[4]"></a>USBD_FS_SerialStrDescriptor</STRONG> (Thumb, 364 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.USBD_FS_SerialStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_FS_SerialStrDescriptor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.FS_Desc)
</UL>
<P><STRONG><a name="[1d3]"></a>USBD_GetString</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_GetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_GetString
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_ProductStrDescriptor
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_ManufacturerStrDescriptor
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_Interface3StrDescriptor
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_Interface2StrDescriptor
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_Interface1StrDescriptor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_ConfigStrDescriptor
</UL>

<P><STRONG><a name="[1d4]"></a>USBD_LL_CloseEP</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_LL_CloseEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_LL_CloseEP
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_DeInit
</UL>

<P><STRONG><a name="[1a6]"></a>USBD_LL_OpenEP</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_LL_OpenEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_LL_OpenEP
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[1a5]"></a>USBD_LL_StallEP</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_LL_StallEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_LL_StallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_Setup
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[1c9]"></a>USBD_Restart</STRONG> (Thumb, 1926 bytes, Stack size 104 bytes, lto-llvm-ea22a7.o(.text.USBD_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = USBD_Restart &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USB_DevDisconnect
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[2a]"></a>USBD_UA3REO_DataIn</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_DataIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBD_UA3REO_DataIn &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[2b]"></a>USBD_UA3REO_DataOut</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_DataOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_UA3REO_DataOut &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[26]"></a>USBD_UA3REO_DeInit</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBD_UA3REO_DeInit &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_CloseEP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[29]"></a>USBD_UA3REO_EP0_RxReady</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_EP0_RxReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_UA3REO_EP0_RxReady
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[28]"></a>USBD_UA3REO_EP0_TxReady</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_EP0_TxReady))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[30]"></a>USBD_UA3REO_GetDeviceQualifierDescriptor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_GetDeviceQualifierDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[2f]"></a>USBD_UA3REO_GetFSCfgDesc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_GetFSCfgDesc))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[25]"></a>USBD_UA3REO_Init</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_UA3REO_Init &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_OpenEP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[2d]"></a>USBD_UA3REO_IsoINIncomplete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_IsoINIncomplete))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[2e]"></a>USBD_UA3REO_IsoOutIncomplete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_IsoOutIncomplete))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[2c]"></a>USBD_UA3REO_SOF</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_SOF))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[27]"></a>USBD_UA3REO_Setup</STRONG> (Thumb, 1108 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.USBD_UA3REO_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBD_UA3REO_Setup &rArr; USB_EP0StartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StartXfer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_StallEP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-ea22a7.o(.data.USBD_UA3REO)
</UL>
<P><STRONG><a name="[18c]"></a>USB_EP0StartXfer</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.USB_EP0StartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_Setup
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DataOutStageCallback
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[15b]"></a>USB_EPStartXfer</STRONG> (Thumb, 512 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.USB_EPStartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_EPStartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Receive_FS
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init_FS
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_DataOut
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_UA3REO_DataIn
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_AUDIO_StartTransmit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1ce]"></a>WM8731_RX_mode</STRONG> (Thumb, 1010 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.WM8731_RX_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = WM8731_RX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_endTransmission
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cb]"></a>WM8731_TXRX_mode</STRONG> (Thumb, 1610 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.WM8731_TXRX_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_endTransmission
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
</UL>

<P><STRONG><a name="[1cc]"></a>WM8731_start_i2s_and_dma</STRONG> (Thumb, 1014 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.WM8731_start_i2s_and_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = WM8731_start_i2s_and_dma &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[199]"></a>addSymbols</STRONG> (Thumb, 124 bytes, Stack size 128 bytes, lto-llvm-ea22a7.o(.text.addSymbols))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = addSymbols &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SETTIME
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayStatusInfoBar
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_displayFreqInfo
</UL>

<P><STRONG><a name="[1c2]"></a>arm_add_f32</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.arm_add_f32))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1b3]"></a>arm_biquad_cascade_df2T_f32</STRONG> (Thumb, 1240 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.arm_biquad_cascade_df2T_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = arm_biquad_cascade_df2T_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1b4]"></a>arm_fir_decimate_f32</STRONG> (Thumb, 2916 bytes, Stack size 112 bytes, lto-llvm-ea22a7.o(.text.arm_fir_decimate_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = arm_fir_decimate_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1bc]"></a>arm_fir_f32</STRONG> (Thumb, 1688 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.arm_fir_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = arm_fir_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1be]"></a>arm_max_f32</STRONG> (Thumb, 914 bytes, Stack size 72 bytes, lto-llvm-ea22a7.o(.text.arm_max_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = arm_max_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1b5]"></a>arm_min_f32</STRONG> (Thumb, 814 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.arm_min_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = arm_min_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processAutoNotchReduction
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[1c4]"></a>arm_mult_f32</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.arm_mult_f32))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1b6]"></a>arm_quick_sort_core_f32</STRONG> (Thumb, 584 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.arm_quick_sort_core_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = arm_quick_sort_core_f32 &rArr;  arm_quick_sort_core_f32 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_core_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_core_f32
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[163]"></a>arm_rms_f32</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.arm_rms_f32))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoRxAGC
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1c1]"></a>arm_sub_f32</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, lto-llvm-ea22a7.o(.text.arm_sub_f32))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1a1]"></a>drawSystemMenuElement</STRONG> (Thumb, 532 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.drawSystemMenuElement))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = drawSystemMenuElement &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_printText
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventSecRotateSystemMenu
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_doEvents
</UL>

<P><STRONG><a name="[1b2]"></a>eventSecRotateSystemMenu</STRONG> (Thumb, 1106 bytes, Stack size 48 bytes, lto-llvm-ea22a7.o(.text.eventSecRotateSystemMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = eventSecRotateSystemMenu &rArr; SYSMENU_drawSystemMenu &rArr; TRX_setFrequency &rArr; TRX_setMode &rArr; WM8731_TXRX_mode &rArr; i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSystemMenuElement
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_drawSystemMenu
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_drawChar
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill_RectXY
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDriver_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[17d]"></a>getBandFromFreq</STRONG> (Thumb, 674 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.getBandFromFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = getBandFromFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_afterPrintFFT
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_SWR_BAND_START
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_AUDIO_FMSquelch
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSMENU_HANDL_ADC_DRIVER
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_PRE
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_MODE_P
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_MODE_N
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_BAND_P
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_BAND_N
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_ATTHOLD
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_ATT
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRONTPANEL_BUTTONHANDLER_AGC
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1cf]"></a>getModeFromFreq</STRONG> (Thumb, 326 bytes, Stack size 16 bytes, lto-llvm-ea22a7.o(.text.getModeFromFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getModeFromFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_setFrequency
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cd]"></a>i2c_endTransmission</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.i2c_endTransmission))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = i2c_endTransmission &rArr; i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_shift_out
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_get_ack
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_TXRX_mode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM8731_RX_mode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRX_Restart_Mode
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d6]"></a>i2c_get_ack</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, lto-llvm-ea22a7.o(.text.i2c_get_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = i2c_get_ack &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_endTransmission
</UL>

<P><STRONG><a name="[1d5]"></a>i2c_shift_out</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, lto-llvm-ea22a7.o(.text.i2c_shift_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = i2c_shift_out &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_endTransmission
</UL>

<P><STRONG><a name="[1c3]"></a>processAutoNotchReduction</STRONG> (Thumb, 1676 bytes, Stack size 64 bytes, lto-llvm-ea22a7.o(.text.processAutoNotchReduction))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = processAutoNotchReduction &rArr; arm_min_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_min_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1bb]"></a>readFromCircleBuffer32</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, lto-llvm-ea22a7.o(.text.readFromCircleBuffer32))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = readFromCircleBuffer32 &rArr; HAL_DMA_PollForTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[1c7]"></a>sendToDebug_float32</STRONG> (Thumb, 224 bytes, Stack size 104 bytes, lto-llvm-ea22a7.o(.text.sendToDebug_float32))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = sendToDebug_float32 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1c8]"></a>sendToDebug_int16</STRONG> (Thumb, 202 bytes, Stack size 88 bytes, lto-llvm-ea22a7.o(.text.sendToDebug_int16))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = sendToDebug_int16 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1b8]"></a>sendToDebug_str3</STRONG> (Thumb, 438 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.sendToDebug_str3))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sendToDebug_str3 &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setFT450Mode
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[168]"></a>sendToDebug_strln</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, lto-llvm-ea22a7.o(.text.sendToDebug_strln))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sendToDebug_strln &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitWrite
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSettingsToEEPROM
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCalibration
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReinitAudioFilters
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1a8]"></a>sendToDebug_uint16</STRONG> (Thumb, 186 bytes, Stack size 88 bytes, lto-llvm-ea22a7.o(.text.sendToDebug_uint16))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = sendToDebug_uint16 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReinitAudioFilters
</UL>

<P><STRONG><a name="[1c6]"></a>sendToDebug_uint32</STRONG> (Thumb, 200 bytes, Stack size 88 bytes, lto-llvm-ea22a7.o(.text.sendToDebug_uint32))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = sendToDebug_uint32 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[169]"></a>sendToDebug_uint8</STRONG> (Thumb, 202 bytes, Stack size 88 bytes, lto-llvm-ea22a7.o(.text.sendToDebug_uint8))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = sendToDebug_uint8 &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Transmit_FIFO_Events
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Data
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadCalibration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1ba]"></a>setFT450Mode</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, lto-llvm-ea22a7.o(.text.setFT450Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = setFT450Mode &rArr; sendToDebug_str3 &rArr; DEBUG_Transmit_FIFO_Events &rArr; USB_EPStartXfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendToDebug_str3
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
